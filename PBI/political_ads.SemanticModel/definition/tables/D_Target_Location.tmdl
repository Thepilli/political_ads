table D_Target_Location
	lineageTag: 4d76fda5-cdce-4d62-a96f-952d5785eda6

	column Target_Location
		dataType: string
		lineageTag: 8d41475a-1b54-4a21-aa58-4e5cbf713425
		summarizeBy: none
		sourceColumn: Target_Location

		annotation SummarizationSetBy = Automatic

	column Target_Location_key
		dataType: int64
		formatString: 0
		lineageTag: 60596dcd-3a9b-4d8e-9a9a-e9afa9bc6b7f
		summarizeBy: none
		sourceColumn: Target_Location_key

		annotation SummarizationSetBy = Automatic

	partition D_Target_Location = m
		mode: import
		source =
				let
				    Source = Odbc.DataSource("dsn=political_ads", [HierarchicalNavigation=true]),
				    political_ads_db_Database = Source{[Name="political_ads_db",Kind="Database"]}[Data],
				    political_ads_Table = political_ads_db_Database{[Name="political_ads",Kind="Table"]}[Data],
				    #"Cleaned Text" = Table.TransformColumns(political_ads_Table,{{"payer", Text.Clean, type text}, {"page_name", Text.Clean, type text}, {"bylines", Text.Clean, type text}, {"beneficiary", Text.Clean, type text}, {"ad_creative_bodies", Text.Clean, type text}}),
				    #"Trimmed Text" = Table.TransformColumns(#"Cleaned Text",{{"payer", Text.Trim, type text}, {"page_name", Text.Trim, type text}, {"bylines", Text.Trim, type text}, {"beneficiary", Text.Trim, type text}, {"ad_creative_bodies", Text.Trim, type text}}),
				    #"Capitalized Each Word" = Table.TransformColumns(#"Trimmed Text",{{"payer", Text.Proper, type text}, {"page_name", Text.Proper, type text}, {"bylines", Text.Proper, type text}, {"beneficiary", Text.Proper, type text}, {"ad_creative_bodies", Text.Proper, type text}}),
				    target_location_name1 = #"Capitalized Each Word"[target_location_name],
				    #"Removed Duplicates" = List.Distinct(target_location_name1),
				    #"Sorted Items" = List.Sort(#"Removed Duplicates",Order.Ascending),
				    #"Converted to Table" = Table.FromList(#"Sorted Items", Splitter.SplitByNothing(), null, null, ExtraValues.Error),
				    #"Added Index" = Table.AddIndexColumn(#"Converted to Table", "Index", 0, 1, Int64.Type),
				    #"Renamed Columns" = Table.RenameColumns(#"Added Index",{{"Column1", "Target_Location"}, {"Index", "Target_Location_key"}})
				in
				    #"Renamed Columns"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

	annotation TabularEditor_TableGroup = DIMs

